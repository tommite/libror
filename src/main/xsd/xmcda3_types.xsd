<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.decision-deck.org/xmcda3" xmlns:x3="http://www.decision-deck.org/xmcda3"
	elementFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>In each set, if ordering is required, it is assumed
			to be ascending (first element = least preferred).
		</xs:documentation>
	</xs:annotation>

	<!-- Function -->
	<xs:complexType name="functionType" abstract="true" />

	<!-- ExponentialFunction -->
	<xs:complexType name="exponentialFunctionType">
		<xs:annotation>
			<xs:documentation>A function of the form u(x) = 1 âˆ’ e^{-ax}
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="x3:functionType">
				<xs:sequence>
					<xs:element name="exponent" type="xs:double" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Point2D -->
	<xs:complexType name="point2DType">
		<xs:sequence>
			<xs:element name="x" type="xs:double" />
			<xs:element name="y" type="xs:double" />
		</xs:sequence>
	</xs:complexType>

	<!-- PiecewiseLinearFunction -->
	<xs:complexType name="piecewiseLinearFunctionType">
		<xs:complexContent>
			<xs:extension base="x3:functionType">
				<xs:sequence>
					<xs:element name="point" type="x3:point2DType"
						minOccurs="2" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- AffineLinear -->
	<xs:complexType name="affineLinearFunctionType">
		<xs:complexContent>
			<xs:extension base="x3:functionType">
				<xs:sequence>
					<xs:element name="a" type="xs:double" minOccurs="1"
						maxOccurs="1" />
					<xs:element name="b" type="xs:double" minOccurs="1"
						maxOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- KeyedEntity -->
	<xs:complexType name="keyedEntityType" abstract="true">
		<xs:sequence>
			<xs:element name="id" type="xs:string" minOccurs="1"
				maxOccurs="1"></xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:attributeGroup name="keyedEntityReferenceAttributeGroup">
		<xs:attribute name="ref" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Reference to named entity</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>

	<xs:complexType name="keyedEntityReference">
		<xs:attributeGroup ref="x3:keyedEntityReferenceAttributeGroup"></xs:attributeGroup>
	</xs:complexType>

	<!-- Alternative -->
	<xs:complexType name="alternativeType" abstract="false">
		<xs:complexContent>
			<xs:extension base="x3:keyedEntityType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="alternativeReference">
		<xs:complexContent>
			<xs:restriction base="x3:keyedEntityReference">
				<xs:attributeGroup ref="x3:keyedEntityReferenceAttributeGroup"></xs:attributeGroup>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="alternativeSetType">
		<xs:sequence>
			<xs:element name="alternative" type="x3:alternativeType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- Category -->
	<xs:complexType name="categoryType">
		<xs:complexContent>
			<xs:extension base="x3:keyedEntityType" />
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="categoryReference">
		<xs:complexContent>
			<xs:restriction base="x3:keyedEntityReference">
				<xs:attributeGroup ref="x3:keyedEntityReferenceAttributeGroup"></xs:attributeGroup>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="categorySetType">
		<xs:sequence>
			<xs:element name="category" type="x3:categoryType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>


	<!-- Attribute -->
	<xs:complexType name="attributeType" abstract="false">
		<xs:complexContent>
			<xs:extension base="x3:keyedEntityType">
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="attributeReference">
		<xs:complexContent>
			<xs:restriction base="x3:keyedEntityReference">
				<xs:attributeGroup ref="x3:keyedEntityReferenceAttributeGroup"></xs:attributeGroup>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="attributeSetType">
		<xs:sequence>
			<xs:element name="attribute" type="x3:attributeType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="nominalToCardinalType">
		<xs:sequence>
			<xs:element name="nominalFrom" type="x3:attributeReference" />
			<xs:element name="cardinalTo" type="x3:attributeReference" />
			<xs:element name="categoryValue" type="x3:valuedEntityType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="nominalToCardinalSetType">
		<xs:sequence>
			<xs:element name="nominalToCardinal" type="x3:nominalToCardinalType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- Measurement -->
	<xs:complexType name="measurementType" abstract="true" />

	<!-- ExactMeasurement -->
	<xs:complexType name="exactMeasurementType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence>
					<xs:element name="value" type="xs:double" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- BinaryMeasurement -->
	<xs:complexType name="binaryMeasurementType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence>
					<xs:element name="value" type="xs:boolean" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Interval -->
	<xs:complexType name="intervalType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence>
					<xs:element name="begin" type="xs:double" />
					<xs:element name="end" type="xs:double" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Gaussian -->
	<xs:complexType name="gaussianType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence>
					<xs:element name="mu" type="xs:double" />
					<xs:element name="sigma" type="xs:double" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ExactNominalMeasurement -->
	<xs:complexType name="nominalMeasurementType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence>
					<!-- Changed to be simpler, does it have any drawback? -->
					<!-- <xs:element name="category" type="x3:categoryType" /> -->
					<xs:element name="category" type="xs:string" minOccurs="1"
						maxOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- ImpreciseNominalMeasurement -->
	<xs:complexType name="impreciseNominalMeasurementType">
		<xs:complexContent>
			<xs:extension base="x3:measurementType">
				<xs:sequence minOccurs="1" maxOccurs="unbounded">
					<xs:element name="category" type="x3:categoryType" />
					<xs:element name="probability" type="xs:double" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!-- Criterion -->
	<xs:complexType name="criterionType" abstract="true">
		<xs:complexContent>
			<xs:extension base="x3:keyedEntityType">
				<xs:sequence>
					<xs:element name="attribute" type="x3:attributeReference"></xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="criterionReference">
		<xs:complexContent>
			<xs:restriction base="x3:keyedEntityReference">
				<xs:attributeGroup ref="x3:keyedEntityReferenceAttributeGroup"></xs:attributeGroup>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="criterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:criterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>


	<!-- DirectUtilityCriterion -->
	<xs:complexType name="directUtilityCriterionType">
		<xs:complexContent>
			<xs:extension base="x3:criterionType">
				<xs:sequence>
					<xs:element name="alternativeUtility" type="x3:valuedEntityType"
						minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="directUtilityCriterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:directUtilityCriterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- NominalUtilityCriterion -->
	<xs:complexType name="nominalUtilityCriterionType">
		<xs:complexContent>
			<xs:extension base="x3:criterionType">
				<xs:sequence>
					<xs:element name="categoryUtility" type="x3:valuedEntityType"
						minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="nominalUtilityCriterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:nominalUtilityCriterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- CardinalUtilityCriterion -->
	<xs:complexType name="cardinalUtilityCriterionType">
		<xs:complexContent>
			<xs:extension base="x3:criterionType">
				<xs:sequence>
					<xs:element name="utilityFunction" type="x3:functionType" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="cardinalUtilityCriterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:cardinalUtilityCriterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- DirectedCriterion -->
	<xs:complexType name="directedCriterionType">
		<xs:complexContent>
			<xs:extension base="x3:criterionType">
				<xs:sequence>
					<xs:element name="preferenceDirection" minOccurs="1"
						maxOccurs="1">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="ascending" />
								<xs:enumeration value="descending" />
							</xs:restriction>
						</xs:simpleType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="directedCriterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:directedCriterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- OutrankingCriterion -->
	<xs:complexType name="outrankingCriterionType">
		<xs:complexContent>
			<xs:extension base="x3:directedCriterionType">
				<xs:sequence>
					<!-- The thresholds should be composed of non-negative a and b -->
					<xs:element name="preferenceThreshold" type="x3:affineLinearFunctionType"
						minOccurs="0" maxOccurs="1" />
					<xs:element name="indifferenceThreshold" type="x3:affineLinearFunctionType"
						minOccurs="0" maxOccurs="1" />
					<xs:element name="vetoThreshold" type="x3:affineLinearFunctionType"
						minOccurs="0" maxOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="outrankingCriterionSetType">
		<xs:sequence>
			<xs:element name="criterion" type="x3:outrankingCriterionType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- ValuedEntity -->
	<xs:complexType name="anyValuedEntityType">
		<xs:sequence>
			<xs:element name="entity" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:measurementType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="anyValuedEntitySetType">
		<xs:sequence>
			<xs:element name="entry" type="x3:anyValuedEntityType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>

	<!-- ExactValuedEntity -->
	<xs:complexType name="valuedEntityType">
		<xs:sequence>
			<xs:element name="entity" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:exactMeasurementType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="valuedEntitySetType">
		<xs:sequence>
			<xs:element name="entry" type="x3:valuedEntityType"
				minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>


	<!-- ValuedPair -->
	<xs:complexType name="anyValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:measurementType" />
		</xs:sequence>
	</xs:complexType>

	<!-- ValuedRelation -->
	<xs:complexType name="anyValuedRelationType">
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:anyValuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<!-- BinaryValuedPair -->
	<xs:complexType name="binaryValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:binaryMeasurementType"
				minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If not present, the measurement is interpreted as
						if it had a value equals to true. It is recommended, though not
						mandatory, to only use this feature when the false values are
						skipped.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<!-- BinaryValuedRelation -->
	<xs:complexType name="binaryRelationType">
		<xs:sequence>
			<!-- If this binary relation is supposed to be known over some set of 
				pairs, then it is allowed (though not mandatory) to skip some pairs, that 
				is, to have no binaryValuedPair representing some pairs. Those pairs will 
				be interpreted as if they had been included with a value equal to false. -->
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:binaryValuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<!-- ExactValuedPair -->
	<xs:complexType name="valuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:exactMeasurementType" />
		</xs:sequence>
	</xs:complexType>

	<!-- ExactValuedRelation -->
	<xs:complexType name="valuedRelationType">
		<xs:annotation>
			<xs:documentation>To encode a relation over sets A Ã— B, with A, B in
				{alternative set, attribute set, criterion set, category set}, A â‰ 
				B, two possibilities exist as the from and to may be inverted.
				Please use as from type the one coming first in the list
				[alternative set, attribute set, criterion set, category set]. Note
				this also holds for other valued relations.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:valuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="intervalValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:intervalType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="intervalValuedRelationType">
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:intervalValuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="gaussianValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:gaussianType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="gaussianValuedRelationType">
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:gaussianValuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="nominalValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:nominalMeasurementType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="nominalValuedRelationType">
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:nominalValuedPairType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="impreciseNominalValuedPairType">
		<xs:sequence>
			<xs:element name="from" type="x3:keyedEntityReference" />
			<xs:element name="to" type="x3:keyedEntityReference" />
			<xs:element name="measurement" type="x3:impreciseNominalMeasurementType" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="impreciseNominalValuedRelationType">
		<xs:sequence>
			<xs:element name="valuedPair" minOccurs="0" maxOccurs="unbounded"
				type="x3:impreciseNominalValuedPairType" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>
